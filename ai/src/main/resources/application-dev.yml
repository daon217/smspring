server:
  port: 80
  servlet:
    encoding:
      charset: UTF-8
      force: true
spring:
  config:
    import: optional:file:.env[.properties]  # .env import
  mvc:
    view:
      prefix: /views/
      suffix: .jsp
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: ENC(idIWCdznEM3ggslDeTmLJw==)
  ai:
    vectorstore:
      pgvector:
        initialize-schema: true
    openai:
      api-key: ENC(0Kj9x1+PwawzGwkHhQqrxOVJ6sBpruTb729rKKniiRYIWNiFbUJD9uVPaCB1TRfMfl9IDNYT+pnynCT/X8Q7cKhzGhvWfRTLQ+QPWkJm+faxrZ0cwnygArS92+XCvwxuuRYPF9G5eJwaZcW8FaCjI/OEjs/a3OeBDx58FVlfVX8cZLEPxnJDiv7Ed3uxzFadoZf/uRHPu/g1XdyDEeEjunNiYQ2lu/Vwk/hcDPnJ+eA=)
      chat:
        options:
          model: gpt-4o
          temperature: 0.1
          max-tokens: 1000

mybatis:
  type-aliases-package: edu.sm.app.dto
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

logging:
  level:
    root: info

# Application Config
# @Value("${}")
app:
  key:
    skey: ${MY_KEY}
#    chatgpt: ENC(0Kj9x1+PwawzGwkHhQqrxOVJ6sBpruTb729rKKniiRYIWNiFbUJD9uVPaCB1TRfMfl9IDNYT+pnynCT/X8Q7cKhzGhvWfRTLQ+QPWkJm+faxrZ0cwnygArS92+XCvwxuuRYPF9G5eJwaZcW8FaCjI/OEjs/a3OeBDx58FVlfVX8cZLEPxnJDiv7Ed3uxzFadoZf/uRHPu/g1XdyDEeEjunNiYQ2lu/Vwk/hcDPnJ+eA=)
#    gemini: ENC(MOBr/dC8vzmK3pRZmmB0sZRgZ+LMmQzoEaSdueXhtuzx3qDHQyVzni+huoQVgQjy)